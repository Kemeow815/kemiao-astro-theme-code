---
import type { Page, GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import Layout from '~/layouts/Sidebar.astro';
import PostPreview from '~/components/blog/PostPreviewA.astro';
import Pagination from '~/components/Pagination.astro';
import {
    getAllBlogs,
    sortBlogsByDate,
    sortBlogsByPinned,
} from '~/lib/post/post';
import { getUniqueTags } from '~/lib/post/tags';

export const getStaticPaths = (async ({ paginate }) => {
    // grab all posts besides drafts and hidden ones
    const allPosts = await getAllBlogs();
    const allPostsByDate = sortBlogsByDate(allPosts);
    const allPostsByPinned = sortBlogsByPinned(allPostsByDate);
    const tags = getUniqueTags(allPosts);
    return paginate(allPostsByPinned, { props: { tags }, pageSize: 10 });
}) satisfies GetStaticPaths;

interface Props {
    page: Page<CollectionEntry<'blog'>>;
    tags: string[];
}

const { page, tags } = Astro.props;

const meta = {
    title: 'Blogs',
    description: 'Read my collection of blogs and the things that interest me',
};

const paginationProps = {
    ...(page.url.prev && {
        prevUrl: {
            url: page.url.prev,
            text: `← 上浮`,
        },
    }),
    ...(page.url.next && {
        nextUrl: {
            url: page.url.next,
            text: `沉淀 →`,
        },
    }),
};
---

<Layout {...meta}>
    <section class="cody-bg">
        <h1 class="title">Posts</h1>
        <ul class="flex flex-col gap-4">
            {page.data.map((post) => <PostPreview post={post} withDesc />)}
        </ul>
        <Pagination {...paginationProps} />
    </section>
    {
        !!tags.length && (
            <aside slot="sidebar">
                <h2 class="flex font-semibold text-lg items-center mb-4">
                    <svg
                        aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-6 w-6 me-1"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        fill="none"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                    >
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
                        <path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
                        <path d="M6 9h-.01" />
                    </svg>
                    标签
                </h2>
                <ul class="flex gap-2 flex-wrap mb-4">
                    {tags.map((tag) => (
                        <li class="tag">
                            <a href={`/tags/${tag}`} aria-label={`tag: ${tag}`}>
                                {tag}
                            </a>
                        </li>
                    ))}
                </ul>
                <a
                    href="/tags"
                    class="cody-link"
                    aria-label="View all blog tags"
                >
                    查看更多 ->
                </a>
            </aside>
        )
    }
</Layout>
